using Oracle.ManagedDataAccess.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Net.Sockets;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Linq;
using System.Text.Json;

namespace Mini_Danawha02
{
    public class Com
    {
        public string Name { get; set; }
        public string Cid { get; set; }
        public string Cphone { get; set; }
        public string Ctime { get; set; }
        public string Ctype { get; set; }
        public string Cprice { get; set; }
        public string Cpu { get; set; }
        public string Gpu { get; set; }
        public string Cme { get; set; }
        public string Cmb { get; set; }
        public string Ccase { get; set; }
        public string Cpw { get; set; }
        public string Cas1 { get; set; }
        public string Cas2 { get; set; }
        public string Cas3 { get; set; }
        public string Cas4 { get; set; }
        public string Cas5 { get; set; }
        public string Cas6 { get; set; }
        public string Cas7 { get; set; }
        public string Opt { get; set; }

    }
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        public async void OrderCom(string cid, string price, string cpu, string gpu, string cme, string cmb, string ccase, string cpw, string cas1, string cas2, string cas3, string cas4, string cas5, string cas6, string cas7, string opt)
        {
            string strConn = "Data Source=(DESCRIPTION=" +
             "(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)" +
             "(HOST=localhost)(PORT=1521)))" +
             "(CONNECT_DATA=(SERVER=DEDICATED)" +
             "(SERVICE_NAME=xe)));" +
             "User Id=hr;Password=hr;";
            OracleConnection conn = new OracleConnection(strConn);
            conn.Open();
            OracleCommand cmd = new OracleCommand();
            cmd.Connection = conn;
            int _price = int.Parse(price);
            cmd.CommandText = $"insert into custumer values (auto_increase.nextval,'01043146182',sysdate,0,{_price},'{cpu}','{gpu}','{cme}','{cmb}','{ccase}','{cpw}','{cas1}','{cas2}','{cas3}','{cas4}','{cas5}','{cas6}','{cas7}')";
            cmd.ExecuteNonQuery();

            cmd.CommandText = "SELECT cid FROM custumer where cid = (select Max(cid) from custumer)";
            cid = cmd.ExecuteScalar().ToString();
            conn.Close();

            AppendText(($"주문번호{cid} :  컴퓨터 주문 \n"));
            Com com = await MakeCom(cid, price, cpu, gpu, cme, cmb, ccase, cpw, cas1, cas2, cas3, cas4, cas5, cas6, cas7, opt);
        }

        private SemaphoreSlim _semaphore = new SemaphoreSlim(1, 1);

        public async Task<Com> MakeCom(string cid, string price, string cpu, string gpu, string cme, string cmb, string ccase, string cpw, string cas1, string cas2, string cas3, string cas4, string cas5, string cas6, string cas7,string opt)
        {
            string strConn = "Data Source=(DESCRIPTION=" +
             "(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)" +
             "(HOST=localhost)(PORT=1521)))" +
             "(CONNECT_DATA=(SERVER=DEDICATED)" +
             "(SERVICE_NAME=xe)));" +
             "User Id=hr;Password=hr;";

            //1.연결 객체 만들기 - Client
            OracleConnection conn = new OracleConnection(strConn);

            //2.데이터베이스 접속을 위한 연결
            conn.Open();

            //3.서버와 함께 신나게 놀기
            //3.1 Query 명령객체 만들기
            OracleCommand cmd = new OracleCommand();
            cmd.Connection = conn; //연결객체와 연동

            await _semaphore.WaitAsync();
            try
            {
                cmd.CommandText = $"SELECT binven FROM bupum WHERE bname = '{cpu}' OR bname = '{gpu}' OR bname = '{cme}' OR bname = '{cmb}' OR bname ='{ccase}' OR bname = '{cpw}' OR bname = '{cas1}'OR bname = '{cas2}'OR bname = '{cas3}'OR bname = '{cas4}'OR bname = '{cas5}'OR bname = '{cas6}'OR bname = '{cas7}'";
                OracleDataReader reader = cmd.ExecuteReader();
                while (reader.Read())
                {
                    int binven = reader.GetInt32(0);
                    if (binven <= 0)
                    {
                        AppendText($"재고가 부족합니다\n");
                        return null;
                    }
                }

                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cpu}'";
                cmd.ExecuteNonQuery();
                if (gpu != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{gpu}'";
                    cmd.ExecuteNonQuery();
                }
                if (opt == "2")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cme}'";
                    cmd.ExecuteNonQuery();
                }
                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cme}'";
                cmd.ExecuteNonQuery();

                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cme}'";
                cmd.ExecuteNonQuery();

                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cmb}'";
                cmd.ExecuteNonQuery();

                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{ccase}'";
                cmd.ExecuteNonQuery();

                cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cpw}'";
                cmd.ExecuteNonQuery();

                if (cas1 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas1}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas2 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas2}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas3 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas3}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas4 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas4}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas5 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas5}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas6 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas6}'";
                    cmd.ExecuteNonQuery();
                }
                if (cas7 != "선택 안함")
                {
                    cmd.CommandText = $"UPDATE bupum SET binven = binven - 1, bsales = bsales + 1 WHERE bname = '{cas7}'";
                    cmd.ExecuteNonQuery();

                }
         

                AppendText(($"주문번호 {cid} : 컴퓨터 주문 제작 시작 \n"));
                await Task.Delay(1000);

                AppendText(($"주문번호 {cid} : {cpu} 삽입완료 \n"));
                await Task.Delay(1000);

                if (gpu != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {gpu} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (opt == "2")
                {
                    AppendText(($"주문번호 {cid} : {cme} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                AppendText(($"주문번호 {cid} : {cme} 삽입완료 \n"));
                await Task.Delay(1000);

                AppendText(($"주문번호 {cid} : {cmb} 삽입완료 \n"));
                await Task.Delay(1000);

                AppendText(($"주문번호 {cid} : {cpw} 삽입완료 \n"));
                await Task.Delay(1000);

                if (cas1 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas1} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas2 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas2} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas3 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas3} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas4 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas4} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas5 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas5} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas6 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas6} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                if (cas7 != "선택 안함")
                {
                    AppendText(($"주문번호 {cid} : {cas7} 삽입완료 \n"));
                    await Task.Delay(1000);
                }
                AppendText(($"주문번호 {cid} : 제작 완료 \n"));

            }
            finally
            {
                _semaphore.Release();
            }
            cmd.CommandText = $"UPDATE custumer SET ctype=1 WHERE cid = '{cid}'";
            cmd.ExecuteNonQuery();
            conn.Close();

            return new Com { Cid = cid,Cpu=cpu,Gpu=gpu };
        }
        private void AppendText(string text)
        {
            if (richTextBox1.InvokeRequired)
            {
                richTextBox1.Invoke(new Action<string>(AppendText), text);
            }
            else
            {
                richTextBox1.AppendText(text);
            }
        }
        private void button1_Click(object sender, EventArgs e)
        {
            IPAddress ipAddress = IPAddress.Parse("192.168.111.145");
            int port = 13000;

            TcpListener server = new TcpListener(ipAddress, port);
            Task.Run(() =>
            {
            server.Start();
                AppendText("서버를 시작합니다...\n");
            while (true)
            {
                TcpClient client = server.AcceptTcpClient();

                using (NetworkStream stream = client.GetStream())
                {
                    byte[] buffer = new byte[1024];
                    int bytesRead = stream.Read(buffer, 0, buffer.Length);
                    string receivedData = Encoding.UTF8.GetString(buffer, 0, bytesRead);

                    try
                    {
                        Com comData = JsonSerializer.Deserialize<Com>(receivedData);
                            string cid = $"{comData.Cid}";
                            string price = $"{comData.Cprice}";
                            string cpu = $"{comData.Cpu}";
                            string gpu = $"{comData.Gpu}";
                            string cme = $"{comData.Cme}";
                            string cmb = $"{comData.Cmb}";
                            string ccase = $"{comData.Ccase}";
                            string cpw = $"{comData.Cpw}";
                            string cas1 = $"{comData.Cas1}";
                            string cas2 = $"{comData.Cas2}";
                            string cas3 = $"{comData.Cas3}";
                            string cas4 = $"{comData.Cas4}";
                            string cas5 = $"{comData.Cas5}";
                            string cas6 = $"{comData.Cas6}";
                            string cas7 = $"{comData.Cas7}";
                            string opt = $"{comData.Opt}";
                            Thread t = new Thread(() =>
                              OrderCom(cid, price, cpu, gpu, cme, cmb, ccase, cpw, cas1,cas2,cas3,cas4,cas5,cas6,cas7,opt));
                            t.IsBackground = true;
                            t.Start();
                            t.Join();

                            //AppendText(("모든 주문 끝 \n"));
         


                        //byte[] responseBytes = Encoding.UTF8.GetBytes(response);
                        //stream.Write(responseBytes, 0, responseBytes.Length);


                    }
                    catch (JsonException ex)
                    {
                        //Console.WriteLine("Error parsing JSON: " + ex.Message);
                    }
                }

                client.Close();
                //Console.WriteLine("Client disconnected...");
            }
            server.Stop();
            });
        }
    }
}
